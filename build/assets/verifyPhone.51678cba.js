import{aG as f,m as u,u as g,r as l,bf as h,bh as a,Z as s}from"./index.ab711dbd.js";h.title="Requesting To Server...";const m=f("otp verification store",()=>{const e=u(),p=g(),r=l(!1),n=l(""),c=()=>{r.value=!0,n.value=""};return{getOtpVerificationCode:async t=>{const o={method:"post",url:"api/otp/request_phone_verification_otp",headers:{"Content-Type":"application/json",Authorization:`Bearer ${e.loginUserInfo.token}`},data:{phone:e.loginUserInfo.phone}};try{const i=await a.request(o);s.create({position:"center",type:"positive",message:"Otp Sent successfully"}),t()}catch(i){console.log(i),s.create({position:"center",type:"negative",message:"Could not send OTP. Server error."})}},verifyOtpCode:async()=>{if(n.value=="")return;const t={method:"post",url:"api/otp/verify_phone",headers:{"Content-Type":"application/json",Authorization:`Bearer ${e.loginUserInfo.token}`},data:{otp:n.value}};try{const o=await a.request(t);e.loginUserInfo.phoneVerified=!0,r.value=!1,p.push("/service_provider_profile")}catch(o){console.log(o),r.value=!1,s.create({position:"center",type:"negative",message:"Could not verify otp. Try again later."})}},getOtpVerificationCodeWhileRegistration:async()=>{const t={method:"post",url:"api/otp/request_phone_verification_otp",headers:{"Content-Type":"application/json",Authorization:`Bearer ${e.loginUserInfo.token}`},data:{phone:e.loginUserInfo.phone}};try{await a.request(t),c()}catch(o){console.log(o),s.create({position:"center",type:"negative",message:"Could not send OTP. Server error."})}},verifyOtpCodeWhileRegistration:async t=>{const o={method:"post",url:"api/otp/verify_phone",headers:{"Content-Type":"application/json",Authorization:`Bearer ${e.loginUserInfo.token}`},data:{otp:t}};try{await a.request(o),e.loginUserInfo.phoneVerified=!0,p.push("/service_provider_profile")}catch(i){console.log(i)}},openOtpVerificationDialog:r,otpInput:n,openOtpVerificationDialogManager:c}});export{m as u};
